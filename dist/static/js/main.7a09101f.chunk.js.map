{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/stocks/StockCard.js","components/stocks/Portfolio.js","components/dashboard/Notifications.js","components/dashboard/StatusPanel.js","components/dashboard/Dashboard.js","components/stocks/StockDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/stocks/Trade.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","StockCard","_ref","name","quantity","stock_info","ticker","price","Portfolio","stocks","stock_data","console","log","Object","keys","map","key","index","stocks_StockCard","Notifications","notifications","item","id","user","content","moment","time","toDate","fromNow","StatusPanel","liquid","total","Dashboard","_this$props","this","stocks_Portfolio","dashboard_StatusPanel","dashboard_Notifications","Redirect","Component","compose","users","firestore","data","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","Trade","tradeStock","history","push","stock","traderId","stock_map","cost","update","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","StockDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","arguments","length","undefined","action","objectSpread","message","projectReducer","rootReducer","combineReducers","project","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.7a09101f.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>Trade</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n        firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0],\n        total: 100000,\n        liquid: 100000,\n        stocks: {}\n        })\n\n      return resp;\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n          <Link to='/' className=\"brand-logo left\">Portfolio</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\n\nconst StockCard = ({name, quantity, stock_info}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{name}</span>\n        <p className=\"grey-text\">{stock_info ? stock_info.ticker : null}</p>\n        <p className=\"grey-text\">{quantity}</p>\n        <p className=\"grey-text\">{stock_info ? stock_info.price : null}</p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default StockCard;\n","import React from 'react'\nimport StockCard from './StockCard'\nimport { Link } from 'react-router-dom'\n\nconst Portfolio = ({stocks, stock_data}) => {\n  console.log(stocks);\n\n  return (\n    <div className=\"stock-list section\">\n      { stocks && Object.keys(stocks).map((key, index) => {\n        return (\n          <Link to={'/stock/' + key} key={key}>\n            <StockCard quantity={stocks[key]} name = {key} stock_info = {stock_data ? stock_data[key] : null}  />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default Portfolio;\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst StatusPanel = (props) => {\r\n    const liquid = props.liquid;\r\n    var total = liquid;\r\n    const stocks = props.stocks;\r\n    const stock_data = props.stock_data;\r\n    for (var key in stocks) {\r\n        if(stock_data) {\r\n            total += stock_data[key].price * stocks[key]\r\n        }\r\n    }\r\n    return (\r\n    <div className=\"section\">\r\n    <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Current Portfolio</span>\r\n            <p>Liquid: {liquid}</p>\r\n            <p>Total:  {total}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatusPanel\r\n","import React, { Component } from 'react'\nimport Portfolio from '../stocks/Portfolio'\nimport Notifications from './Notifications'\nimport StatusPanel from './StatusPanel'\n\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { stocks, auth, notifications, stock_data, total, liquid } = this.props;\n    console.log(stock_data);\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <Portfolio stocks={stocks} stock_data ={stock_data} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <StatusPanel liquid = {liquid} total = {total} stocks={stocks} stock_data={stock_data}></StatusPanel>\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  const uid = state.firebase.auth.uid;\n  const users = state.firestore.data.users;\n  const user = users ? users[uid] : null\n  const stocks = user ? user['stocks'] : null\n  const liquid = user ? user['liquid'] : null\n  const total = user ? user['total'] : null\n\n  return {\n    liquid: liquid,\n    total: total,\n    stocks: stocks,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n    stock_data : state.firestore.data.stock_data\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'users'},\n      {collection: 'stock_data'},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst StockDetails = (props) => {\n  const { auth, stock_info } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (stock_info) {\n    return (\n      <div className=\"container section stock-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{stock_info.name}</span>\n            <span className=\"card-title\">{stock_info.price}</span>\n            <p>{stock_info.ticker}</p>s\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Stock...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const name = ownProps.match.params.id;\n  console.log(name);\n  const stock_data = state.firestore.data.stock_data;\n  const stock_info = stock_data ? stock_data[name] : null;\n\n\n  return {\n    stock_info: stock_info,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'stock_data'\n    \n  }])\n)(StockDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { tradeStock } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Trade extends Component {\n  state = {\n    id: '',\n    name: '',\n    quantity: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n    this.setState({id: this.state.name});\n\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.tradeStock(this.state, this.props.stock_data);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Trade</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='name' onChange={this.handleChange} />\n            <label htmlFor=\"name\">Stock</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"number\" id=\"quantity\"  onChange={this.handleChange}></input>\n            <label htmlFor=\"quantity\">Quantity</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">TRADE</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    stock_data : state.firestore.data.stock_data\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tradeStock: (stock, stock_data) => dispatch(tradeStock(stock, stock_data))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,mapDispatchToProps),\n  firestoreConnect([\n      {collection: 'stock_data'}\n  ])\n)(Trade)\n\n","export const tradeStock = (stock, stock_data) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const traderId = getState().firebase.auth.uid;\n    var stock_map = getState().firebase.profile.stocks;\n    var liquid = getState().firebase.profile.liquid;\n    const total = getState().firebase.profile.total;\n    const cost = stock_data[stock.name].price * stock.quantity;\n    if(cost <= liquid) {\n      liquid = liquid - cost;\n      if (stock.name in stock_map) {\n        stock_map[stock.name] += stock.quantity\n      }\n      else {\n        stock_map[stock.name] = stock.quantity\n      }\n    \n      firestore.collection('users').doc(traderId).update({\n      stocks: stock_map,\n      liquid: liquid,\n      total: total\n      }).then(() => {\n        dispatch({ type: 'TRADE_SUCCESS' });\n      }).catch(err => {\n        dispatch({ type: 'TRADE_ERROR' }, err);\n      });\n    } else {\n      dispatch({type: 'TRADE_ERROR'}, 'not that much liquid');\n    }\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport StockDetails from './components/stocks/StockDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Trade from './components/stocks/Trade'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/stock/:id' component={StockDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={Trade} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'TRADE_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'TRADE_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Replace this with your own config details\nvar config = {\n  apiKey: \"AIzaSyDZ6ackH-HhVHkM4WeB3JLoX3tIALbFBIw\",\n  authDomain: \"stocksim-7b0e3.firebaseapp.com\",\n  databaseURL: \"https://stocksim-7b0e3.firebaseio.com\",\n  projectId: \"stocksim-7b0e3\",\n  storageBucket: \"\",\n  messagingSenderId: \"97488453538\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n});\n\n"],"sourceRoot":""}