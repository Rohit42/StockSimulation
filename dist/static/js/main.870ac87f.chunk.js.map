{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/stocks/StockCard.js","components/stocks/Portfolio.js","components/dashboard/Notifications.js","components/dashboard/StatusPanel.js","components/dashboard/Dashboard.js","components/stocks/StockDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/stocks/Trade.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","withRouter","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","StockCard","_ref","name","quantity","stock_info","Timer","q_s","t_s","ticker","p_s","price","toFixed","Portfolio","stocks","stock_data","console","log","Object","keys","map","key","index","stocks_StockCard","Notifications","notifications","item","id","user","content","moment","time","toDate","fromNow","StatusPanel","liquid","total","Dashboard","_this$props","this","stocks_Portfolio","dashboard_StatusPanel","dashboard_Notifications","Redirect","Component","compose","users","firestore","data","ordered","firestoreConnect","collection","limit","orderBy","ownProps","trade_page","match","params","graph_data","Array","from","entries","slice","react_charts_es","label","primary","Line","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","Trade","tradeStock","history","i","detail_name","length","list","stocks_StockDetails","stock","traderId","stock_map","timer","parseFloat","update","push","App","BrowserRouter","forceRefresh","layout_Navbar","Switch","Route","exact","path","component","StockDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","arguments","undefined","action","objectSpread","message","projectReducer","rootReducer","combineReducers","project","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.870ac87f.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/trade'>Trade</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n        firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0],\n        total: 100000,\n        liquid: 100000,\n        stocks: {}\n        })\n\n      return resp;\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n          <Link to='/' className=\"brand-logo left\">Portfolio</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Navbar))\n","import React from 'react'\n\nconst StockCard = ({name, quantity, stock_info, Timer}) => {\n  var q_s = \"Quantity: \" + quantity;\n  var t_s = \"Ticker: \" + (stock_info ? stock_info.ticker : null);\n  var p_s = \"Price: \" + (stock_info ? stock_info.price[Timer].toFixed(2) : null);\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{name}</span>\n        <p className=\"grey-text\">{t_s}</p>\n        <p className=\"grey-text\">{q_s}</p>\n        <p className=\"grey-text\">{p_s}</p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default StockCard;\n","import React from 'react'\nimport StockCard from './StockCard'\nimport { Link } from 'react-router-dom'\n\nconst Portfolio = ({stocks, stock_data, Timer}) => {\n  console.log(stocks);\n\n  return (\n    <div className=\"stock-list section\">\n      { stocks && Object.keys(stocks).map((key, index) => {\n        return (\n          <Link to={'/stock/' + key} key={key}>\n            <StockCard Timer={Timer} quantity={stocks[key]} name = {key} stock_info = {stock_data ? stock_data[key] : null}  />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default Portfolio;\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst StatusPanel = (props) => {\r\n    var liquid = props.liquid;\r\n    var total = liquid;\r\n    const stocks = props.stocks;\r\n    const stock_data = props.stock_data;\r\n    for (var key in stocks) {\r\n        if(stock_data) {\r\n            var price_array = stock_data[key].price;\r\n            total += price_array[props.Timer] * stocks[key]\r\n        }\r\n    }\r\n    liquid =  liquid ? liquid.toFixed(2) : liquid;\r\n    total = total ? total.toFixed(2): total;\r\n    return (\r\n    <div className=\"section\">\r\n    <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Current Portfolio</span>\r\n            <p>Liquid: {liquid}</p>\r\n            <p>Total:  {total}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatusPanel\r\n","import React, { Component } from 'react'\nimport Portfolio from '../stocks/Portfolio'\nimport Notifications from './Notifications'\nimport StatusPanel from './StatusPanel'\n\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { stocks, auth, notifications, stock_data, total, liquid, Timer } = this.props;\n    console.log(\"here\");\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <Portfolio stocks={stocks} stock_data ={stock_data} Timer = {Timer} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <div className=\"timer_box\">\n              <div className=\"chip timer\">\n                Timer: {Timer}\n              </div>\n            </div>\n            <StatusPanel liquid = {liquid} total = {total} stocks={stocks} stock_data={stock_data} Timer = {Timer}></StatusPanel>\n\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  const uid = state.firebase.auth.uid;\n  const users = state.firestore.data.users;\n  const user = users ? users[uid] : null;\n  const stocks = user ? user['stocks'] : null;\n  const liquid = user ? user['liquid'] : null;\n  const total = user ? user['total'] : null;\n  const stock_data = state.firestore.data.stock_data;\n  console.log(stock_data);\n  const Timer = stock_data ? stock_data[\"Game\"]['Timer'] : null;\n\n  return {\n    liquid: liquid,\n    total: total,\n    stocks: stocks,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n    stock_data : stock_data,\n    Timer : Timer\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'users'},\n      {collection: 'stock_data'},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nimport moment from 'moment'\nimport { Chart, Axis, Series, Tooltip, Cursor, Line } from \"react-charts\";\n\nconst StockDetails = (props) => {\n  const { auth, stock_info, Timer, trade_page } = props;\n  if (!auth.uid) return <Redirect to='/signin' />\n  if (stock_info) {\n    var graph_data = Array.from(stock_info.price.entries());\n    graph_data = graph_data.slice(0, Timer);\n    return (\n      <div className={trade_page ? \"\" : \"container section\"}>\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{stock_info.name}</span>\n            <span className=\"card-title\">{stock_info.price[Timer].toFixed(2)}</span>\n            <p>{stock_info.ticker}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div className=\"chart_box\">\n              <Chart data={[\n                  {\n                    label: stock_info.name,\n                    data: graph_data\n                  },\n\n                ]}\n              >\n                <Axis primary type=\"time\" />\n                <Axis type=\"linear\" />\n              <Series type={Line} />\n              </Chart>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Stock...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const trade_page = ownProps.name ? 1 : 0;\n  const name = ownProps.name ? ownProps.name : ownProps.match.params.id;\n  const stock_data = state.firestore.data.stock_data;\n  const stock_info = stock_data ? stock_data[name] : null;\n  const Timer = stock_data ? stock_data[\"Game\"]['Timer'] : null;\n\n\n  return {\n    stock_info: stock_info,\n    auth: state.firebase.auth,\n    Timer: Timer,\n    trade_page : trade_page\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'stock_data'\n    \n  }])\n)(StockDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport Notifications from '../dashboard/Notifications'\nimport StatusPanel from '../dashboard/StatusPanel'\nimport { tradeStock } from '../../store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport StockDetails from './StockDetails';\n\nclass Trade extends Component {\n  state = {\n    id: '',\n    name: '',\n    quantity: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n    this.setState({id: this.state.name});\n\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.tradeStock(this.state, this.props.stock_data, this.props.history );\n    \n  }\n  render() {\n    const { stocks, auth, notifications, stock_data, total, liquid, Timer } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    var detail_name = \"Apple\"\n\n    if (stock_data && this.state.name)  {\n      var i;\n      for(i = 0; i <  Object.keys(stock_data).length; i++) {\n        if (this.state.name === Object.keys(stock_data)[i]) {\n          detail_name = this.state.name;\n        }\n      }\n    }\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col s12 m6\">\n              <form className=\"white margin_top_short\" onSubmit={this.handleSubmit}>\n                <h5 className=\"grey-text text-darken-3\">Trade</h5>\n                <div className=\"input-field\">\n                  <input type=\"text\" id='name' list=\"stocks_to_trade\"onChange={this.handleChange} />\n                  <datalist id=\"stocks_to_trade\">\n                      <option value=\"Apple\"/>\n                      <option value=\"Google\"/>\n                  </datalist>\n                  <label htmlFor=\"name\">Stock</label>\n                  \n                </div>\n                <div className=\"input-field\">\n                  <input type=\"number\" id=\"quantity\"  onChange={this.handleChange}></input>\n                  <label htmlFor=\"quantity\">Quantity</label>\n                </div>\n                <div className=\"input-field\">\n                  <button className=\"btn pink lighten-1\">TRADE</button>\n                </div>\n              </form>\n          </div>\n\n          <div className=\"col s12 m5 offset-m1\">\n            <StatusPanel Timer={Timer} liquid = {liquid} total = {total} stocks={stocks} stock_data={stock_data}></StatusPanel>\n            <Notifications notifications={notifications} />\n          </div>\n          <div className=\"col s12 m12 \">\n              <StockDetails name = {detail_name}></StockDetails>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const uid = state.firebase.auth.uid;\n  const users = state.firestore.data.users;\n  const user = users ? users[uid] : null\n  const stocks = user ? user['stocks'] : null\n  const liquid = user ? user['liquid'] : null\n  const total = user ? user['total'] : null\n  const stock_data = state.firestore.data.stock_data;\n\n  const Timer = stock_data ? stock_data[\"Game\"]['Timer'] : null;\n\n\n  return {\n    liquid: liquid,\n    total: total,\n    stocks: stocks,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,   \n    stock_data : state.firestore.data.stock_data,\n    Timer: Timer\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tradeStock: (stock, stock_data, history) => dispatch(tradeStock(stock, stock_data, history))\n  }\n}\n\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: 'users'},\n      {collection: 'stock_data'},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Trade)\n","\nexport const tradeStock = (stock, stock_data, history) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const traderId = getState().firebase.auth.uid;\n    var stock_map = getState().firebase.profile.stocks;\n    var liquid = getState().firebase.profile.liquid;\n    const total = getState().firebase.profile.total;\n    const timer = stock_data[\"Game\"][\"Timer\"];\n    console.log(stock_data[stock.name].price);\n    const cost = parseFloat(\"\" + stock_data[stock.name].price[timer]) * parseFloat(stock.quantity + \"\");\n\n    liquid = liquid - cost;\n    if (stock.name in stock_map) {\n      stock_map[stock.name] = parseFloat(stock_map[stock.name]) + parseFloat(stock.quantity + \"\");\n    }\n    else {\n      stock_map[stock.name] =  parseFloat(stock.quantity + \"\");\n    }\n  \n    firestore.collection('users').doc(traderId).update({\n    stocks: stock_map,\n    liquid: liquid,\n    total: total\n    })\n    \n    .then(() => {\n      history.push('/');\n      dispatch({ type: 'TRADE_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'TRADE_ERROR' }, err);\n      });\n     \n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport StockDetails from './components/stocks/StockDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Trade from './components/stocks/Trade'\nimport { withRouter } from 'react-router-dom'\n\n// var DashboardRouter = withRouter(Dashboard);\n// var StockDetailsRouter = withRouter(StockDetails);\n// var TradeRouter = withRouter(Trade);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter forceRefresh={true}>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/stock/:id' component={StockDetails}/>\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/trade' component={Trade} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'TRADE_SUCCESS':\n      return state;\n    case 'TRADE_ERROR':\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Replace this with your own config details\nvar config = {\n  apiKey: \"AIzaSyDZ6ackH-HhVHkM4WeB3JLoX3tIALbFBIw\",\n  authDomain: \"stocksim-7b0e3.firebaseapp.com\",\n  databaseURL: \"https://stocksim-7b0e3.firebaseio.com\",\n  projectId: \"stocksim-7b0e3\",\n  storageBucket: \"\",\n  messagingSenderId: \"97488453538\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n});\n\n"],"sourceRoot":""}